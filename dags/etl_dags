from airflow import DAG
from airflow.operators.dummy_operator import DummyOperator
from airflow.operators.python_operator import PythonOperator
from datetime import datetime, timedelta
from src.extract import extract_data
from src.transform import transform_data
from src.load import load_data
from src.validate import validate_data

# Define the default arguments for the DAG
default_args = {
    'owner': 'airflow',
    'start_date': datetime(2023, 1, 1),
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
}

# Define the DAG object
dag = DAG(
    'etl_dag',
    default_args=default_args,
    description='ETL workflow for data pipeline',
    schedule_interval='0 9 * * *',
)

# Define the tasks
start_task = DummyOperator(task_id='start', dag=dag)

extract_task = PythonOperator(
    task_id='extract_data',
    python_callable=extract_data,
    dag=dag,
)

transform_task = PythonOperator(
    task_id='transform_data',
    python_callable=transform_data,
    dag=dag,
)

load_task = PythonOperator(
    task_id='load_data',
    python_callable=load_data,
    dag=dag,
)

validate_task = PythonOperator(
    task_id='validate_data',
    python_callable=validate_data,
    dag=dag,
)

end_task = DummyOperator(task_id='end', dag=dag)

# Define the task dependencies
start_task >> extract_task >> transform_task >> load_task >> validate_task >> end_task
